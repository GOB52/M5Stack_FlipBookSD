;-----------------------------------------------------------------------
; M5Stack_FlipBookSD
;  Support that Hardware can run the M5Unified and SdFat.
;  M5Unified と SdFat が動作するハードウェアをサポートしています
;-----------------------------------------------------------------------
[env]
platform = espressif32@6.2.0
framework = arduino

board_build.flash_mode = qio
board_build.f_flash = 80000000L

lib_deps = m5stack/M5Unified @ 0.1.10
  greiman/SdFat @ 2.2.2
  gob/gob_unifiedButton @ ^0.1.0
lib_ldf_mode = deep

monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
upload_speed = 921600

build_flags = -Wall -Wextra -Wreturn-local-addr -Werror=format -Werror=return-local-addr
  ;-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue
  -DSD_FAT_TYPE=3

; --------------------------------
; Choose build options
; ビルドオプション種別
[option_release]
build_flags =  -DCORE_DEBUG_LEVEL=3
 -DLOG_LOCAL_LEVEL=3
 -DAPP_LOG_LEVEL=3

[option_log]
build_flags =  -DCORE_DEBUG_LEVEL=5
 -DLOG_LOCAL_LEVEL=5
 -DAPP_LOG_LEVEL=5

[option_debug]
build_flags =  -DCORE_DEBUG_LEVEL=5
 -DLOG_LOCAL_LEVEL=5
 -DAPP_LOG_LEVEL=5
 -DDEBUG

;-----------------------------------------------------------------------
; For ESP32(Basic,Gray,Core2)
; Depending on the hardware's Flash capacity, DisplayModule and SD-Updater may not fit, so we have prepared several build environments
; Using M5Unified, Soboard configuration should meet the minimum of the supported models.
; M5Unified の機能を使う為のボード設定は最低限を満たすものを選べば大抵はOKです。
; DisplayModule や SD-Updater の有無によって default パーテーションで Flash 容量に入りきらない場合があるのでいくつかビルド種別を用意しました。

; Vanilla
; 素の状態
[env:release]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags}

; Support display module
; ディプレイモジュールのみサポート
[env:release_DisplayModule]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} -DFBSD_ENABLE_DISPLAY_MODULE
board_build.partitions = min_spiffs.csv

; Support SD-Updater
; SD-Updater のみサポート
[env:release_SdUpdater]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} -DFBSD_ENABLE_SD_UPDATER
lib_deps= ${env.lib_deps}
  tobozo/M5Stack-SD-Updater @1.2.5
board_build.partitions = min_spiffs.csv

; Support display module and SD-Udater
; ディスプレイモジュールと SD-Updater のサポート
[env:release_SdUpdater_DisplayModule]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} -DFBSD_ENABLE_DISPLAY_MODULE -DFBSD_ENABLE_SD_UPDATER
lib_deps= ${env.lib_deps}
  tobozo/M5Stack-SD-Updater @1.2.5
board_build.partitions = min_spiffs.csv

; For profiling
[env:profile]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_log.build_flags} -DENABLE_PROFILE

; For logging
[env:log]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_log.build_flags}

; For debug
[env:debug]
board = m5stack-core-esp32 
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} -DENABLE_PROFILE

;----
; For CoreS3
[env:S3_release]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
upload_speed = 1500000
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags}

[env:S3_release_DisplayModule]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
upload_speed = 1500000
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} -DFBSD_ENABLE_DISPLAY_MODULE

[env:S3_profile]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
upload_speed = 1500000
build_type=release
build_flags=${env.build_flags} ${option_log.build_flags} -DENABLE_PROFILE

[env:S3_log]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
upload_speed = 1500000
build_type=release
build_flags=${env.build_flags} ${option_log.build_flags}

[env:S3_debug]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
upload_speed = 1500000
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} -DENABLE_PROFILE
